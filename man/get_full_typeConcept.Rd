% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{get_full_typeConcept}
\alias{get_full_typeConcept}
\title{Return the concatenated typeConcepts for ancestors and children of a vertex}
\usage{
get_full_typeConcept(g, v)
}
\arguments{
\item{g}{The graph to be queried}

\item{v}{The NVC category for which the 'full' typeConcept will be created}
}
\value{
A string of all relevant typeConcepts, concatenated with ' | '
}
\description{
An interesting (and perhaps useful) characteristic of a hierarchical system
like the NVC is that nodes inherit information from up and down the
hierarchy. More specifically, a node inherits from 'upstream' the character-
istics of its direct ancestors, and captures the characteristics of its
children ('downstream'). For example, the full description of an NVC Class
such as `Forest & Woodland` would include the information in its
\code{typeConcept} \emph{plus} the \code{typeConcept}s of the Subclasses,
Formations, on down to Associations. An NVC category below the Class
level, such as `Polar Tundra & Barrens`, inherits from its children (e.g.,
`Arctic Tundra & Barrens`) but also from its ancestors (`Temperate to Polar
Alpine & Tundra Vegetation` and `Polar & High Montane Scrub, Grassland &
Barrens`). We implicitly understand when we read a \code{typeConcept} for,
e.g., a `Formation`, that the characteristics of the `Subclass` and `Class`
are part of the concept. Importantly, a category doesn't inherit from any
category outside of its direct ancestry up to `Class`: outside of the lineage
there is something that differentiates the category.
}
\examples{
get_full_typeConcept(NVC_graph, "860275")
}

